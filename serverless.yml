service: paths-api

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    PATHS_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    GOALS_TABLE: ${self:service}-goals-${opt:stage, self:provider.stage}
    STEPS_TABLE: ${self:service}-steps-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PATHS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.GOALS_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.STEPS_TABLE}"
functions:
  create:
    handler: paths/create.create
    events:
      - http:
          path: paths
          method: post
          cors: true
  delete:
    handler: paths/delete.delete
    events:
      - http:
          path: paths/{userId}/{pathId}
          method: delete
          cors: true
  get:
    handler: paths/get.get
    events:
      - http:
          path: paths/{userId}/{pathId}
          method: get
          cors: true
  update:
    handler: paths/update.update
    events:
      - http:
          path: paths/{userId}/{pathId}
          method: put
  list:
    handler: paths/list.list
    events:
      - http:
          path: paths/{userId}
          method: get
          cors: true
  goalCreate:
    handler: paths/goals/create.create
    events:
      - http:
          path: paths/{userId}/{pathId}/goals
          method: post
          cors: true
  goalUpdate:
    handler: paths/goals/update.update
    events:
      - http:
          path: paths/{userId}/{pathId}/goals/{goalId}
          method: put
          cors: true
  goalDelete:
    handler: paths/goals/delete.delete
    events:
      - http:
          path: paths/{userId}/{pathId}/goals/{goalId}
          method: delete
          cors: true
  goalsList:
    handler: paths/goals/list.list
    events:
      - http:
          path: paths/{userId}/{pathId}/goals
          method: get
          cors: true
  stepCreate:
    handler: paths/steps/create.create
    events:
      - http:
          path: paths/{userId}/{pathId}/goals/{goalId}/steps
          method: post
          cors: true
resources:
  Resources:
    PathsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PATHS_TABLE}
    GoalsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: pathId
            AttributeType: S
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: pathId
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.GOALS_TABLE}
    StepsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: goalId
            AttributeType: S
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: goalId
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.STEPS_TABLE}
